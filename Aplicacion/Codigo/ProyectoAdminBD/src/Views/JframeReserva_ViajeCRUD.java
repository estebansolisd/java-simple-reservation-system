/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controller.Reserva_ViajeControlador;
import Controller.WinRegistry;
import Model.ClientesModel;
import Model.Conexion;
import Model.DestinoModel;
import Model.EmpleadosModel;
import Model.Reserva_ViajeModel;
import Model.TransporteModel;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Reserva-pc
 */
public class JframeReserva_ViajeCRUD extends javax.swing.JFrame {

    //Aqui se crea el modelo de tabla aunque yo creo que no lo vamos a usar
    DefaultTableModel tabla;

    //Aqui se crean los modelos para acceder a la información de ellos
    Reserva_ViajeModel Reserva = new Reserva_ViajeModel();
    ClientesModel Cliente = new ClientesModel();
    EmpleadosModel Empleado = new EmpleadosModel();
    TransporteModel Transporte = new TransporteModel();
    DestinoModel Destino = new DestinoModel();
    //Aqui se crean los controladores para acceder a la información de ellos
    Reserva_ViajeControlador controlador = new Reserva_ViajeControlador();

    //Aqui creamos el string de conexion
    Conexion conexion = new Conexion();

    //Aqui creamos el array para luego guardar los JComboBox y darselos al CellEditor de la tabla.
    ArrayList editors = new ArrayList();

    //Aqui Creamos los JComboBox con parametros de objetos.
    JComboBox<ClientesModel> comboCliente = new JComboBox();
    JComboBox<TransporteModel> comboTransporte = new JComboBox();
    JComboBox<DestinoModel> comboDestino = new JComboBox();
    JComboBox<EmpleadosModel> comboEmpleado = new JComboBox();

    DefaultCellEditor editor0 = new DefaultCellEditor(comboCliente);
    DefaultCellEditor editor1 = new DefaultCellEditor(comboEmpleado);
    DefaultCellEditor editor2 = new DefaultCellEditor(comboTransporte);
    DefaultCellEditor editor3 = new DefaultCellEditor(comboDestino);

    /**
     * Creates new form JframeReservasCRUD
     */
    public JframeReserva_ViajeCRUD() {
        //Con este codigo maximizamos la ventana
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        //Inicializamos los componentes
        initComponents();
        editors.add(editor0);
        editors.add(editor1);
        editors.add(editor2);
        editors.add(editor3);
        Cliente.mostrarCombo(comboCliente);
        Empleado.mostrarCombo(comboEmpleado);
        Transporte.mostrarCombo(comboTransporte);
        Destino.mostrarCombo(comboDestino);
        try {
            if (WinRegistry.readString(WinRegistry.HKEY_CURRENT_USER, "SOFTWARE\\JAVAPROYECTO", "User").equals("jose")) {
                btnInsertar.setEnabled(false);
                btnActualizar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
                TablaReservas.setEnabled(false);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Ah ocurrido un error con la verificación del usuario de base de datos.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaReservas = new javax.swing.JTable(){
            public TableCellEditor getCellEditor(int row, int column)
            {

                //Columnas
                int modelColumn = convertColumnIndexToModel( column );

                if (modelColumn == 1 && row == TablaReservas.getSelectedRow())
                return (TableCellEditor)editors.get(0);
                else if (modelColumn == 2 && row == TablaReservas.getSelectedRow()){
                    return (TableCellEditor)editors.get(1);
                }
                else if (modelColumn == 3 && row == TablaReservas.getSelectedRow()){
                    return (TableCellEditor)editors.get(2);
                }
                else if (modelColumn == 4 && row == TablaReservas.getSelectedRow()){
                    return (TableCellEditor)editors.get(3);
                }
                else
                return super.getCellEditor(row, column);
            }
        };
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnInsertar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnActualizar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnInstruccionesUso = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mantenimiento de Reservas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        TablaReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Identificacion", "Cedula", "Nombre", "Cargo", "Direccion", "Pais", "Distrito", "Canton", "Telefono", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaReservas.setRowHeight(25);
        jScrollPane1.setViewportView(TablaReservas);

        jPanel6.setBackground(new java.awt.Color(2, 60, 142));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(2, 60, 142));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        btnInsertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsertar.setMaximumSize(new java.awt.Dimension(200, 200));
        btnInsertar.setMinimumSize(new java.awt.Dimension(200, 200));
        btnInsertar.setPreferredSize(new java.awt.Dimension(200, 200));
        btnInsertar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        jPanel1.add(btnInsertar);

        jPanel2.setBackground(new java.awt.Color(2, 60, 142));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save.png"))); // NOI18N
        btnGuardar.setText("Guardar fila insertada");
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setMaximumSize(new java.awt.Dimension(200, 200));
        btnGuardar.setMinimumSize(new java.awt.Dimension(200, 200));
        btnGuardar.setPreferredSize(new java.awt.Dimension(200, 200));
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);

        jPanel3.setBackground(new java.awt.Color(2, 60, 142));
        jPanel3.setMaximumSize(jPanel2.getMaximumSize());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit.png"))); // NOI18N
        btnActualizar.setText("Editar");
        btnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActualizar.setMaximumSize(btnGuardar.getMaximumSize());
        btnActualizar.setMinimumSize(btnGuardar.getMinimumSize());
        btnActualizar.setPreferredSize(btnGuardar.getPreferredSize());
        btnActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar);

        jPanel4.setBackground(new java.awt.Color(2, 60, 142));
        jPanel4.setMaximumSize(jPanel2.getMaximumSize());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setMaximumSize(btnGuardar.getMaximumSize());
        btnEliminar.setMinimumSize(btnGuardar.getMinimumSize());
        btnEliminar.setPreferredSize(btnGuardar.getPreferredSize());
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);

        jPanel5.setBackground(new java.awt.Color(2, 60, 142));
        jPanel5.setMaximumSize(jPanel2.getMaximumSize());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5);

        btnInstruccionesUso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/info.png"))); // NOI18N
        btnInstruccionesUso.setText("Instrucciones de uso");
        btnInstruccionesUso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInstruccionesUso.setMaximumSize(btnGuardar.getMaximumSize());
        btnInstruccionesUso.setMinimumSize(btnGuardar.getMinimumSize());
        btnInstruccionesUso.setPreferredSize(btnGuardar.getPreferredSize());
        btnInstruccionesUso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInstruccionesUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInstruccionesUsoActionPerformed(evt);
            }
        });
        jPanel1.add(btnInstruccionesUso);

        jPanel7.setBackground(new java.awt.Color(2, 60, 142));
        jPanel7.setMaximumSize(jPanel2.getMaximumSize());

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7);

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/return.png"))); // NOI18N
        btnRegresar.setText("Regresar al menu");
        btnRegresar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegresar.setMaximumSize(btnGuardar.getMaximumSize());
        btnRegresar.setMinimumSize(btnGuardar.getMinimumSize());
        btnRegresar.setPreferredSize(btnGuardar.getPreferredSize());
        btnRegresar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar);

        jPanel6.add(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        /*
        * Lo que hacemos aqui es que cada vez que la ventana esta activa(osea se muestra) consultamos la tabla
         */
        //Este ResultSet va a servir para guardar los datos de la siguiente consulta
        ResultSet resultado;
        //Este TryCatch se puso para evitar errores a la hora de consultar la base de datos y asignaar los datos.
        try {
            //Ejecutamos la consulta
            conexion.ejecutarSqlSelect("SELECT * FROM v_reservas");

            //Le pone al ResulSet resultados los datos obtenidos de la consulta.
            resultado = conexion.Fetch();

            //Aqui le ponemos el modelo construido por el metodo 'ContruirTabla' a la tabla actual
            TablaReservas.setModel(ConstruirTabla(resultado));

            //Este metodo lo que hace es formatear los campos de fecha para que los usuarios finales no insertar otra cosa que no sea una fecha.
            this.PonerMascara();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_formWindowActivated

    public void cargarJComboBox() {
        comboCliente.removeAllItems();
        comboEmpleado.removeAllItems();
        comboTransporte.removeAllItems();
        comboDestino.removeAllItems();
        editors.add(editor0);
        editors.add(editor1);
        editors.add(editor2);
        editors.add(editor3);
        Cliente.mostrarCombo(comboCliente);
        Empleado.mostrarCombo(comboEmpleado);
        Transporte.mostrarCombo(comboTransporte);
        Destino.mostrarCombo(comboDestino);
    }

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        //ESTE TRYCATCH ES PARA EVITAR CUALQUIER PROBLEMA A LA HORA DE ACTUALIZAR
        try {
            //Aqui cargamos el JComboBox
            /*
            *Aqui con este codigo le quitamos el focus de alguna  celda al usuario si lo tiene
            estoo con el objetivo de prevenir enviar danos nulos
             */
            if (TablaReservas.isEditing()) {
                TablaReservas.getCellEditor().stopCellEditing();
            }

            //Con esta condición evaluamos que la celda haya sido seleccionada, en caso contrario le mandamos un mensaje.
            if (TablaReservas.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(rootPane, "Porfavor selecciona la fila que deseas actualizar");
            } else {
                Reserva.setInd_Re_viaje(Integer.parseInt(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 0))));
                Reserva.setInd_cliente(comboCliente.getItemAt(comboCliente.getSelectedIndex()).getInd_cliente());
                Reserva.setInd_empleado(comboEmpleado.getItemAt(comboEmpleado.getSelectedIndex()).getInd_empleado());
                Reserva.setInd_transporte(comboTransporte.getItemAt(comboTransporte.getSelectedIndex()).getInd_transporte());
                Reserva.setInd_destino(comboDestino.getItemAt(comboDestino.getSelectedIndex()).getInd_destino());
                Reserva.setFec_inicio(Date.valueOf(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 5))));
                Reserva.setFec_final(Date.valueOf(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 6))));
                Reserva.setFor_pago(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 7)));
                Reserva.setNum_plazas(Integer.parseInt(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 8))));
                if (controlador.actualizar_reservas(Reserva)) {
                    JOptionPane.showMessageDialog(rootPane, "Actualizado Correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Ocurrio un error");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Puede que hayas ingresado una fecha invalida, ha ocurrido el siguiente error \n" + e.getMessage());
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        //En este paso agrego una nueva fila
        try {
            DefaultTableModel modelo = (DefaultTableModel) TablaReservas.getModel();
            modelo.addRow(new Object[]{});
            this.cargarJComboBox();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Ha ocurrido el siguiente error \n" + e.getMessage());
        }
        //Aqui cargamos el JComboBox de nuevo
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            //Quitar la edicion para actualizar datos
            if (TablaReservas.isEditing()) {
                TablaReservas.getCellEditor().stopCellEditing();
            }
            Reserva.setInd_Re_viaje(Integer.parseInt(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getModel().getRowCount() - 1, 0))));
            Reserva.setInd_cliente(comboCliente.getItemAt(comboCliente.getSelectedIndex()).getInd_cliente());
            Reserva.setInd_empleado(comboEmpleado.getItemAt(comboEmpleado.getSelectedIndex()).getInd_empleado());
            Reserva.setInd_transporte(comboTransporte.getItemAt(comboTransporte.getSelectedIndex()).getInd_transporte());
            Reserva.setInd_destino(comboDestino.getItemAt(comboDestino.getSelectedIndex()).getInd_destino());
            Reserva.setFec_inicio(Date.valueOf(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getModel().getRowCount() - 1, 5))));
            Reserva.setFec_final(Date.valueOf(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getModel().getRowCount() - 1, 6))));
            Reserva.setFor_pago(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getModel().getRowCount() - 1, 7)));
            Reserva.setNum_plazas(Integer.parseInt(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getModel().getRowCount() - 1, 8))));
            if (controlador.insertar_reservas(Reserva)) {
                JOptionPane.showMessageDialog(rootPane, "Insertado Correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ocurrio un error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Asegurate de haber llenado correctamente la fila y los datos, ha ocurrido el siguiente error \n" + e.getMessage());
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            if (TablaReservas.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(rootPane, "Porfavor selecciona la fila que deseas eliminar");
            } else {
                //JOptionPane.showMessageDialog(rootPane, Integer.parseInt(String.valueOf(TablaReservas.getValueAt(TablaReservas.getSelectedRow(), 0))));
                Reserva.setInd_Re_viaje(Integer.parseInt(String.valueOf(TablaReservas.getModel().getValueAt(TablaReservas.getSelectedRow(), 0))));
                if (controlador.eliminar_reservas(Reserva)) {
                    JOptionPane.showMessageDialog(rootPane, "Eliminado Correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Ocurrio un error");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Probablemente quieres eliminar una fila que todavia no exists \n" + e);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnInstruccionesUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstruccionesUsoActionPerformed
        JOptionPane.showMessageDialog(rootPane, " Si quieres agregar un nuevo registro debes presionar *Insertar* y escribir en la fila que se te despliega los datos nuevos \n Luego le das *Guardar fila insertada* para que se guarden los datos en la base de datos \n Si quieres actualizar una fila, primero seleccionas la fila que deseas actualizar y sobre-escribes el dato de la fila seleccionada y luego le das en *Editar* \n Para eliminar una fila solo debes seleccionar la fila que desees eliminar y darle *Eliminar*");
    }//GEN-LAST:event_btnInstruccionesUsoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        JframeMenu menu = new JframeMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JframeReserva_ViajeCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JframeReserva_ViajeCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JframeReserva_ViajeCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JframeReserva_ViajeCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JframeReserva_ViajeCRUD().setVisible(true);
            }
        });
    }

    public void PonerMascara() {

        try {
            MaskFormatter mascaraF = new MaskFormatter("####-##-##");
            JFormattedTextField fechaFormateada = new JFormattedTextField(mascaraF);
            fechaFormateada.setToolTipText("yyyy-mm-dd");
            TablaReservas.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(fechaFormateada));
            TablaReservas.getColumnModel().getColumn(6).setCellEditor(new DefaultCellEditor(fechaFormateada));

        } catch (ParseException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    public static DefaultTableModel ConstruirTabla(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnas = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        columnas.add("Número Id de Reserva");
        columnas.add("Cliente");
        columnas.add("Empleado");
        columnas.add("Tipo de transporte");
        columnas.add("Destino");
        columnas.add("Fecha de incio");
        columnas.add("Fecha de finalización");
        columnas.add("Forma de pago");
        columnas.add("Número de plazas");
        /**
         * for (int column = 1; column <= columnCount; column++) {
         * columnas.add(metaData.getColumnName(column)); }
         */

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnas);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaReservas;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnInstruccionesUso;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
